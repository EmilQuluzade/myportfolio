%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2346 360
%%HiResBoundingBox: 0 0 2346 360
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2346 360 re
W
q
[0.24 0 0 -0.24 0 360] cm
q
0 0 9775 1496.875 re
W*
q
[47.618084 0 0 47.6674 152.885498 167.78943] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
1.02 15.9 m
1 15.9 l
1 16.4 0.98 16.92 1 17.439999 c
1.02 18.079998 1.06 18.719999 1.1 19.359999 c
1.1 19.579998 1.16 19.639999 1.36 19.679998 c
1.78 19.779999 2.18 19.799999 2.6 19.799999 c
3.68 19.759998 4.76 19.84 5.84 19.799999 c
6.28 19.779999 6.48 19.82 6.92 19.74 c
7.32 19.66 7.46 19.440001 7.46 18.84 c
7.42 18.460001 7.44 18.299999 7.44 17.84 c
7.44 17.18 6.98 16.960001 6.58 16.98 c
6.3 17 4.96 16.959999 4.42 16.959999 c
3.52 16.98 3.66 17.099998 3.66 16.16 c
3.66 15.4 3.68 14.42 3.68 13.639999 c
3.68 13.219999 3.72 13.079999 4.12 13.079999 c
6.62 13.079999 l
7.02 13.139999 7.3 12.859999 7.3 12.439999 c
7.3 12.019999 7.34 11.999999 7.34 11.579999 c
7.28 10.979999 l
7.24 10.639998 7.12 10.519999 6.78 10.519999 c
6.56 10.519999 6.34 10.539999 6.12 10.559999 c
5.26 10.619999 4.86 10.499998 4.02 10.559999 c
3.74 10.559999 3.7 10.519999 3.68 10.259998 c
3.6 9.479999 3.68 8.619998 3.76 7.839998 c
3.78 7.519998 3.86 7.459998 4.16 7.439998 c
6.98 7.419998 l
7.36 7.379998 7.48 7.399998 7.46 7.019998 c
7.42 6.439998 7.48 5.839998 7.42 5.259998 c
7.38 4.939998 7.28 4.879998 6.92 4.879998 c
6.32 4.899998 6.179999 4.899998 5.579999 4.939998 c
4.98 4.959998 2.579999 4.959998 1.999999 4.959998 c
1.159999 4.959998 1.099999 4.899998 1.079999 5.919998 c
1.039999 6.719998 1.059999 7.539998 1.059999 8.359999 c
1.059999 9.759998 0.979999 14.779999 1.019999 15.899999 c
1.02 15.9 l
h
12.36 5.02 m
12.16 5.02 11.96 5.04 11.759999 5.04 c
11.459999 5.04 11.099999 4.98 11.039999 5.38 c
10.839999 7.08 10.659999 8.96 10.459999 10.66 c
10.119999 13.46 9.799999 16.34 9.48 19.139999 c
9.44 19.519999 9.4 19.879999 9.82 19.959999 c
10.46 20 10.94 20 11.48 19.98 c
11.679999 20 11.9 20.02 11.959999 19.779999 c
11.999999 19.679998 11.999999 19.579998 11.999999 19.48 c
12.039999 19.02 12.639999 13.26 12.879999 13.26 c
13.259999 13.26 14.259999 17.940001 14.739999 19.66 c
14.799999 19.9 14.919999 20 15.159999 19.98 c
15.659999 19.939999 16.139999 19.98 16.639999 19.98 c
17.139999 19.98 17.039999 19.66 17.139999 19.24 c
17.26 18.780001 18.42 13.24 18.699999 13.24 c
19.019999 13.24 19.679998 19.66 19.739998 19.799999 c
19.859999 20.08 20.199997 19.959999 20.439999 19.959999 c
20.799999 19.959999 21.139999 20 21.599998 19.959999 c
21.939999 19.919998 22.279999 20.039999 22.299999 19.599998 c
22.299999 19.499998 22.259998 19.399998 22.24 19.299999 c
22.16 18.799999 22.059999 18.199999 21.959999 17.699999 c
21.82 16.66 21.619999 15.639999 21.48 14.599999 c
21.279999 12.959998 21.08 11.319999 20.9 9.679998 c
20.76 8.279999 20.559999 6.699998 20.440001 5.299998 c
20.4 4.839998 19.880001 4.999998 19.560001 4.999998 c
18.180002 4.999998 l
17.960003 4.999998 17.860003 5.419998 17.820002 5.639998 c
17.700001 6.199998 16.320002 13.419998 15.860002 13.419998 c
15.400002 13.419998 13.920002 6.819998 13.660002 5.379998 c
13.600001 5.059998 13.380002 4.959998 13.080002 4.959998 c
12.36 5.02 l
h
27.059999 14.84 m
27 12.56 27.019999 10.14 27.039999 7.88 c
27.039999 7.18 26.999998 6.42 26.999998 5.72 c
26.999998 4.96 26.699999 5.000001 26.299997 4.980001 c
25.719997 4.960001 25.459997 4.960001 24.879997 4.960001 c
24.499998 4.940001 24.339996 5.04 24.339996 5.420001 c
24.339996 7.380001 24.279997 12.92 24.299995 13.720001 c
24.319994 14.520002 24.399996 18.160002 24.359995 18.960001 c
24.339994 19.240002 24.359995 19.52 24.379995 19.800001 c
24.399996 19.900002 24.459995 20.000002 24.619995 20.000002 c
25.279995 19.960001 25.899996 19.960001 26.559996 19.940002 c
26.799995 19.920002 26.999996 19.860003 27.099997 19.600002 c
27.119997 19.460003 27.059996 15.800002 27.059996 14.840002 c
27.059999 14.84 l
h
29.1 6.96 m
29.08 8.2 29.200001 17.26 29.18 17.92 c
29.18 18.540001 29.18 19.16 29.200001 19.780001 c
29.200001 19.880001 29.26 19.980001 29.360001 19.980001 c
30.76 20.040001 32.139999 19.920002 33.540001 19.940001 c
34 19.960001 34.459999 19.940001 34.900002 19.940001 c
35.34 19.92 35.380001 19.74 35.360001 19.380001 c
35.34 18.820002 35.34 18.320002 35.34 17.780001 c
35.32 17.5 35.16 17.400002 34.920002 17.400002 c
34.100002 17.420002 33.280003 17.380001 32.460003 17.420002 c
32.320004 17.440002 32.180004 17.440002 32.040005 17.440002 c
31.800005 17.420002 31.740005 17.360003 31.720005 17.100002 c
31.720005 16.800003 l
31.660006 15.140003 31.780005 13.420003 31.780005 11.760003 c
31.760004 10.360004 31.780005 9.100003 31.760004 7.860003 c
31.760004 7.320003 31.760004 6.780003 31.740004 6.260003 c
31.720003 5.940003 31.740004 5.600003 31.660004 5.280003 c
31.620003 5.160003 31.560003 5.000003 31.420004 5.000003 c
29.540005 5.000003 l
29.220005 5.000003 29.120005 5.220003 29.100004 5.540003 c
29.100004 6.960003 l
29.1 6.96 l
h
f
Q
q
[35.510712 0 0 35.547485 1829.3582 -1025.82959] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
29.399 57.112 m
30.014 57.419998 30.476 57.958 30.476 58.494999 c
30.476 59.534 29.438 60.455997 28.476999 59.957001 c
13.254 52.076 l
12.408 51.577 11.678 51.268002 11.678 50.192001 c
11.678 49.077 12.37 48.807003 13.254 48.27 c
28.476999 40.389 l
29.514999 40.042999 30.476 40.813 30.476 41.851002 c
30.476 42.426003 30.014999 42.965 29.399 43.274002 c
15.638 50.192001 l
29.399 57.112 l
h
f
29.033001 60.209 m
28.825001 60.209 28.620001 60.157001 28.425001 60.056999 c
13.202002 52.175999 l
13.116001 52.125999 13.037002 52.080997 12.960002 52.035 c
12.212002 51.604 11.565002 51.230999 11.565002 50.192001 c
11.565002 49.135002 12.159002 48.786003 12.911002 48.343002 c
13.004003 48.289001 13.098002 48.233002 13.195003 48.174004 c
28.424004 40.289001 l
28.619003 40.223 28.801004 40.192001 28.982004 40.192001 c
29.882004 40.192001 30.588005 40.920002 30.588005 41.850002 c
30.588005 42.437004 30.151005 43.022003 29.449005 43.372002 c
15.887005 50.190002 l
29.449005 57.008003 l
30.140005 57.354004 30.588005 57.938004 30.588005 58.492004 c
30.587999 59.407001 29.861 60.209 29.033001 60.209 c
h
28.982 40.418999 m
28.826 40.418999 28.668001 40.445 28.512001 40.496998 c
13.306 48.369999 l
13.215 48.426998 13.118 48.482998 13.025 48.536999 c
12.282 48.975998 11.790999 49.264999 11.790999 50.191998 c
11.790999 51.101997 12.327999 51.410999 13.072 51.839996 c
13.151 51.884995 13.23 51.929996 13.311 51.978996 c
28.528 59.855995 l
28.690001 59.939995 28.860001 59.982994 29.032 59.982994 c
29.729 59.982994 30.362 59.273994 30.362 58.494995 c
30.362 58.029995 29.955 57.514996 29.348 57.211994 c
15.386 50.191994 l
29.348 43.171993 l
29.963999 42.863995 30.362 42.343994 30.362 41.850994 c
30.363001 41.048 29.756001 40.418999 28.982 40.418999 c
h
f
46.384998 64.416 m
46.153999 65.107002 45.462997 65.493004 44.771 65.376999 c
44.001999 65.223999 43.501999 64.491997 43.617001 63.684998 c
43.617001 63.608997 43.656002 63.493996 43.694 63.377998 c
53.574001 35.546997 l
53.804001 34.854996 54.496002 34.508999 55.188 34.623997 c
55.917999 34.777996 56.457001 35.508995 56.341 36.275997 c
56.341 36.353996 56.301998 36.468998 56.264 36.545998 c
46.384998 64.416 l
h
f
45.015999 65.511002 m
44.927998 65.511002 44.839001 65.502998 44.752998 65.488998 c
43.915997 65.321999 43.382 64.540001 43.505997 63.669998 c
43.504997 63.593998 43.543995 63.476997 43.584995 63.351997 c
53.467995 35.509998 l
53.674995 34.891998 54.245995 34.489998 54.924995 34.489998 c
55.018997 34.489998 55.112995 34.498997 55.205994 34.512997 c
56.017994 34.684998 56.574993 35.482998 56.452995 36.293995 c
56.453995 36.379993 56.405994 36.513996 56.365993 36.595993 c
46.490993 64.451996 l
46.280998 65.084 45.688 65.511002 45.015999 65.511002 c
h
54.924999 34.715 m
54.344997 34.715 53.856998 35.055 53.681 35.582001 c
43.800999 63.415001 l
43.765999 63.519001 43.730999 63.628002 43.730999 63.685001 c
43.622997 64.452003 44.079998 65.124001 44.792999 65.266998 c
44.863998 65.278999 44.939999 65.284996 45.015999 65.284996 c
45.591 65.284996 46.098999 64.921997 46.278999 64.380997 c
56.16 36.508995 l
56.201 36.423996 56.23 36.326996 56.23 36.277996 c
56.334999 35.565994 55.856998 34.881996 55.166 34.734997 c
55.089001 34.722 55.007 34.715 54.924999 34.715 c
h
f
84.362 50.192001 m
70.599998 43.273998 l
69.986 42.964996 69.525002 42.425999 69.525002 41.850998 c
69.525002 40.813 70.562004 39.888996 71.523003 40.388996 c
86.746002 48.269997 l
87.631004 48.806995 88.321999 49.076996 88.321999 50.191998 c
88.321999 51.267998 87.591995 51.576996 86.746002 52.075996 c
71.523003 59.956997 l
70.562004 60.455997 69.525002 59.533997 69.525002 58.494995 c
69.525002 57.957996 69.986 57.419994 70.599998 57.111996 c
84.362 50.192001 l
h
f
70.967003 60.209 m
70.139 60.209 69.411003 59.407001 69.411003 58.494999 c
69.411003 57.939999 69.858002 57.355999 70.550003 57.010998 c
84.112 50.192997 l
70.550003 43.374001 l
69.848 43.021999 69.411003 42.438 69.411003 41.852001 c
69.411003 40.939003 70.139 40.138 70.967003 40.138 c
71.176003 40.138 71.380005 40.188999 71.575005 40.290001 c
86.798004 48.171001 l
86.902 48.233002 86.996002 48.290001 87.088005 48.344002 c
87.841003 48.786003 88.435005 49.136002 88.435005 50.193001 c
88.435005 51.232002 87.789001 51.605 87.040009 52.035999 c
86.962006 52.082001 86.883011 52.126999 86.803009 52.174 c
71.575012 60.057999 l
71.379997 60.157001 71.176003 60.209 70.967003 60.209 c
h
70.967003 40.362999 m
70.271004 40.362999 69.637001 41.071999 69.637001 41.850998 c
69.637001 42.343998 70.034004 42.863998 70.651001 43.171997 c
84.612999 50.191998 l
70.651001 57.211998 l
70.044998 57.516998 69.637001 58.031998 69.637001 58.494999 c
69.637001 59.273998 70.271004 59.982998 70.967003 59.982998 c
71.139 59.982998 71.309006 59.939999 71.471001 59.855999 c
86.694 51.975998 l
86.768997 51.929996 86.848999 51.884998 86.927002 51.839996 c
87.671005 51.409996 88.209 51.101997 88.209 50.191998 c
88.209 49.263996 87.718002 48.975998 86.973999 48.536999 c
86.880997 48.482998 86.785995 48.426998 86.686996 48.367001 c
71.470993 40.491001 l
71.308998 40.404999 71.139 40.362999 70.967003 40.362999 c
h
f
Q
q
[47.239407 0 0 47.28833 5076.5405 173.00101] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
14.940001 16.639999 m
14.960001 17.599998 14.940001 18.58 14.88 19.539999 c
14.88 19.619999 14.82 19.699999 14.76 19.74 c
14.68 19.799999 14.58 19.84 14.480001 19.84 c
13.240001 20.040001 11.740001 20.139999 10.540001 19.74 c
7.840001 18.82 6.000001 15.799999 6.000001 12.34 c
6.000001 8.6 8.680001 4.96 12.580001 4.82 c
13.1 4.8 14.880001 4.72 14.820001 5.6 c
14.780001 6.24 14.840001 6.76 14.820001 7.42 c
14.820001 7.54 14.740001 7.62 14.620001 7.6 c
13.480001 7.46 12.18 7.1 11.080001 7.62 c
10.160001 8.06 9.520001 9 9.160001 9.92 c
8.520001 11.440001 8.660001 13.2 9.1 14.76 c
9.440001 16 10.18 17.460001 11.66 17.5 c
11.74 17.52 12.5 17.559999 12.5 17.48 c
12.44 14.92 l
12.419999 14.8 12.419999 14.68 12.4 14.56 c
12.38 14.440001 12.299999 14.400001 12.179999 14.38 c
11.86 14.38 11.86 14.36 11.539999 14.36 c
10.799999 14.36 10.959999 13.86 10.939999 13.7 c
10.919998 13.4 10.939999 13.12 10.919998 12.82 c
10.899998 12.54 10.979999 12.32 11.259998 12.28 c
11.499998 12.28 l
12.539998 12.219999 13.599999 12.3 14.699998 12.3 c
14.859998 12.3 14.939998 12.5 14.939998 12.68 c
14.959998 12.88 14.959998 13.020001 14.959998 13.22 c
15.019999 14.200001 14.899998 15.200001 14.919998 16.18 c
14.939999 16.34 14.939999 16.479999 14.939999 16.639999 c
14.940001 16.639999 l
h
16.98 8.28 m
16.98 10.299999 17 12.34 17.039999 14.34 c
17.059999 15.56 17.039999 16.940001 17.619999 18.059999 c
18.359999 19.5 20 20.139999 21.579998 20.039999 c
22.659998 19.959999 23.659998 19.679998 24.439999 18.879999 c
25.759998 17.459999 25.499998 15.239999 25.519999 13.419999 c
25.559999 10.799999 25.619999 8.359999 25.619999 5.719999 c
25.619999 5.279999 25.48 5.04 25.039999 5.02 c
24.499998 5 23.959999 5.02 23.419998 5.06 c
23.199999 5.06 23.019999 5.259999 23.019999 5.5 c
23.039999 7.42 23.079998 9.36 23.059999 11.299999 c
23.039999 12.959999 23.26 14.799999 22.639999 16.379999 c
22.4 16.959999 21.859999 17.4 21.219999 17.4 c
19.619999 17.359999 19.68 15.459999 19.619999 14.34 c
19.499998 11.9 19.679998 9.4 19.74 6.96 c
19.74 6.5 19.74 6.04 19.76 5.58 c
19.780001 5.34 19.82 5.04 19.5 5.02 c
19.139999 5.02 l
18.639999 5.06 18.139999 5 17.639999 5.02 c
17.16 5.06 17 5.2 17 5.68 c
17 6.54 16.98 7.42 16.98 8.28 c
h
27.620001 6.96 m
27.6 8.2 27.720001 17.26 27.700001 17.92 c
27.700001 18.540001 27.700001 19.16 27.720001 19.780001 c
27.720001 19.880001 27.780001 19.980001 27.880001 19.980001 c
29.280001 20.040001 30.660002 19.920002 32.060001 19.940001 c
32.52 19.960001 32.98 19.940001 33.420002 19.940001 c
33.860001 19.92 33.900002 19.74 33.880001 19.380001 c
33.860001 18.820002 33.860001 18.320002 33.860001 17.780001 c
33.84 17.5 33.68 17.400002 33.440002 17.400002 c
32.620003 17.420002 31.800003 17.380001 30.980003 17.420002 c
30.840004 17.440002 30.700003 17.440002 30.560003 17.440002 c
30.320004 17.420002 30.260004 17.360003 30.240004 17.100002 c
30.240004 16.800003 l
30.180004 15.140003 30.300003 13.420003 30.300003 11.760003 c
30.280003 10.360004 30.300003 9.100003 30.280003 7.860003 c
30.280003 7.320003 30.280003 6.780003 30.260002 6.260003 c
30.240002 5.940003 30.260002 5.600003 30.180002 5.280003 c
30.140001 5.160003 30.080002 5.000003 29.940002 5.000003 c
28.060003 5.000003 l
27.740004 5.000003 27.640003 5.220003 27.620003 5.540003 c
27.620003 6.960003 l
27.620001 6.96 l
h
35.880001 8.28 m
35.880001 10.299999 35.900002 12.34 35.940002 14.34 c
35.960003 15.56 35.940002 16.940001 36.520004 18.059999 c
37.260006 19.5 38.900005 20.139999 40.480003 20.039999 c
41.560005 19.959999 42.560005 19.679998 43.340004 18.879999 c
44.660004 17.459999 44.400005 15.239999 44.420006 13.419999 c
44.460007 10.799999 44.520004 8.359999 44.520004 5.719999 c
44.520004 5.279999 44.380005 5.04 43.940002 5.02 c
43.400002 5 42.860001 5.02 42.320004 5.06 c
42.100002 5.06 41.920002 5.259999 41.920002 5.5 c
41.940002 7.42 41.980003 9.36 41.960003 11.299999 c
41.940002 12.959999 42.160004 14.799999 41.540005 16.379999 c
41.300003 16.959999 40.760006 17.4 40.120003 17.4 c
38.520004 17.359999 38.580002 15.459999 38.520004 14.34 c
38.400005 11.9 38.580006 9.4 38.640003 6.96 c
38.640003 6.5 38.640003 6.04 38.660004 5.58 c
38.680004 5.34 38.720005 5.04 38.400005 5.02 c
38.040005 5.02 l
37.540005 5.06 37.040005 5 36.540005 5.02 c
36.060005 5.06 35.900005 5.2 35.900005 5.68 c
35.900005 6.54 35.880005 7.42 35.880005 8.28 c
35.880001 8.28 l
h
50.34 5 m
47.299999 5 l
47.040001 5 46.880001 5.14 46.880001 5.4 c
46.880001 6.18 46.920002 6.34 46.920002 7 c
46.920002 7.28 47.140003 7.28 48.280003 7.28 c
48.840004 7.28 50.320004 7.28 50.460003 7.3 c
50.500004 7.32 50.580002 7.4 50.580002 7.46 c
50.580002 7.6 50.540001 7.74 50.5 7.86 c
50.459999 7.94 50.439999 8.020001 50.419998 8.1 c
50.359997 8.280001 46.579998 19.299999 46.539997 19.5 c
46.419998 19.92 46.839996 19.959999 47.139996 19.959999 c
47.679996 19.98 53.239994 20 53.779995 20 c
54.039993 20 54.139996 19.799999 54.139996 19.540001 c
54.139996 19.120001 54.199997 18.68 54.199997 18.240002 c
54.199997 17.380001 53.699997 17.640001 52.739998 17.640001 c
51.919998 17.640001 51.199997 17.620001 50.279999 17.620001 c
50.079998 17.620001 49.899998 17.42 49.959999 17.220001 c
50.16 16.320002 52.419998 9.820002 52.84 8.760001 c
53 8.380001 54.380001 5.060001 53.619999 5.020001 c
53.459999 5.000001 53.299999 5.020001 53.139999 5.020001 c
52.200001 5.020001 51.279999 5.020001 50.34 5.000001 c
50.34 5 l
h
58.040001 19.84 m
58.100002 19.860001 58.280003 19.860001 58.459999 19.860001 c
58.860001 19.860001 58.98 18.42 59.02 18.120001 c
59.040001 17.880001 59.100002 17.860001 59.299999 17.820002 c
60.299999 17.700001 60.799999 17.780001 61.799999 17.800001 c
62.02 17.800001 62.139999 17.900002 62.200001 18.080002 c
62.34 18.540001 l
62.459999 18.880001 62.560001 19.300001 62.68 19.640001 c
62.760002 19.880001 62.779999 19.860001 63.02 19.860001 c
63.34 19.860001 64.5 19.860001 64.840004 19.84 c
65.300003 19.84 64.980003 18.9 64.920006 18.74 c
64.740005 18.18 64.700005 17.6 64.520004 17.039999 c
64.440002 16.799999 62.160004 5.979999 62.060005 5.379999 c
61.920006 5.019999 62.040005 4.999999 61.720005 4.999999 c
61.040005 4.999999 60.320004 5.039999 59.620007 4.999999 c
59.340008 4.999999 59.360008 5.079999 59.320007 5.379999 c
59.280006 5.659999 58.560009 8.839999 58.280006 10.159999 c
57.920006 11.819999 57.600006 13.419999 57.200005 15.06 c
57.060005 15.639999 56.100006 19.82 56.220005 19.84 c
56.280006 19.880001 56.380005 19.860001 56.460007 19.860001 c
56.960007 19.860001 57.420006 19.860001 58.040009 19.84 c
58.040001 19.84 l
h
60.66 15.3 m
60.240002 15.3 l
59.68 15.3 59.66 15.3 59.800003 14.72 c
59.900002 14.280001 60.440002 11.900001 60.560001 11.32 c
60.580002 11.28 60.620003 11.24 60.640003 11.24 c
60.680004 11.24 60.720005 11.28 60.740002 11.3 c
60.820004 11.54 60.900002 12.14 60.980003 12.38 c
61.160004 13.14 61.280003 13.78 61.460003 14.6 c
61.640003 15.320001 61.560001 15.320001 61.200005 15.320001 c
61.020004 15.320001 60.840004 15.3 60.660004 15.3 c
60.66 15.3 l
h
75.5 16.32 m
75.620003 16.06 75.720001 15.799999 75.82 15.54 c
76.040001 14.9 76.080002 14.24 76.139999 13.58 c
76.260002 12.18 76.220001 10.76 75.860001 9.4 c
75.419998 7.66 74.300003 6.06 72.620003 5.32 c
71.860001 4.98 71 4.94 70.18 4.96 c
69.32 4.96 68.440002 4.92 67.580002 5 c
67.340004 5.02 67.220001 5.139999 67.18 5.36 c
67.139999 5.599999 67.099998 5.84 67.099998 6.06 c
67.139999 7.28 67.099998 10.9 67.139999 11.5 c
67.159996 12.04 67.099998 12.7 67.099998 13.24 c
67.119995 14.58 67.099998 15.94 67.099998 17.279999 c
67.099998 17.839998 67.080002 18.379999 67.080002 18.939999 c
67.080002 19.539999 66.860001 19.799999 68.5 19.799999 c
69.959999 19.799999 71.480003 19.679998 72.860001 19.16 c
74.139999 18.700001 74.940002 17.52 75.5 16.32 c
h
69.68 14.24 m
69.68 11.84 l
69.68 10.32 69.720001 9.34 69.660004 8.06 c
69.660004 7.820001 l
69.68 7.400001 69.740005 7.380001 70.18 7.380001 c
70.760002 7.360001 71.18 7.500001 71.68 7.700001 c
72.18 7.900001 72.459999 8.340001 72.720001 8.76 c
73.220001 9.58 73.419998 10.480001 73.459999 11.42 c
73.479996 11.96 73.5 12.5 73.5 13.04 c
73.5 15.6 72 17.380001 70.68 17.380001 c
69.800003 17.380001 69.660004 17.440001 69.660004 16.860001 c
69.660004 16.26 69.700005 15.660001 69.700005 15.06 c
69.680008 14.8 69.680008 14.520001 69.680008 14.240001 c
69.68 14.24 l
h
78.220001 15.9 m
78.200005 15.9 l
78.200005 16.4 78.180008 16.92 78.200005 17.439999 c
78.220001 18.079998 78.260002 18.719999 78.300003 19.359999 c
78.300003 19.579998 78.360001 19.639999 78.560005 19.679998 c
78.980003 19.779999 79.380005 19.799999 79.800003 19.799999 c
80.880005 19.759998 81.960007 19.84 83.040001 19.799999 c
83.480003 19.779999 83.68 19.82 84.120003 19.74 c
84.520004 19.66 84.660004 19.440001 84.660004 18.84 c
84.620003 18.460001 84.640007 18.299999 84.640007 17.84 c
84.640007 17.18 84.180008 16.960001 83.780006 16.98 c
83.500008 17 82.160004 16.959999 81.620003 16.959999 c
80.720001 16.98 80.860001 17.099998 80.860001 16.16 c
80.860001 15.4 80.879997 14.42 80.879997 13.639999 c
80.879997 13.219999 80.919998 13.079999 81.32 13.079999 c
83.82 13.079999 l
84.220001 13.139999 84.5 12.859999 84.5 12.439999 c
84.5 12.019999 84.540001 11.999999 84.540001 11.579999 c
84.480003 10.979999 l
84.440002 10.639998 84.32 10.519999 83.980003 10.519999 c
83.760002 10.519999 83.540001 10.539999 83.32 10.559999 c
82.459999 10.619999 82.059998 10.499998 81.220001 10.559999 c
80.940002 10.559999 80.900002 10.519999 80.880005 10.259998 c
80.800003 9.479999 80.880005 8.619998 80.960007 7.839998 c
80.980003 7.519998 81.060005 7.459998 81.360008 7.439998 c
84.180008 7.419998 l
84.560005 7.379998 84.680008 7.399998 84.660011 7.019998 c
84.62001 6.439998 84.680008 5.839998 84.62001 5.259998 c
84.580009 4.939998 84.480011 4.879998 84.12001 4.879998 c
83.520012 4.899998 83.380013 4.899998 82.780014 4.939998 c
82.180016 4.959998 79.780014 4.959998 79.200012 4.959998 c
78.360016 4.959998 78.300011 4.899998 78.280014 5.919998 c
78.240013 6.719998 78.260017 7.539998 78.260017 8.359999 c
78.260017 9.759998 78.180016 14.779999 78.220016 15.899999 c
78.220001 15.9 l
h
92.660004 14.08 m
92.660004 14.98 92.640007 16.76 92.620003 16.76 c
92.620003 19.48 l
92.620003 19.6 92.600006 19.799999 92.660004 19.92 c
92.720001 20.059999 92.900002 20.02 93.020004 20 c
93.600006 19.940001 94.180008 20.02 94.760002 20 c
95.400002 19.98 95.200005 19 95.18 18.6 c
95.099998 17.720001 95.199997 11.020001 95.199997 8.620001 c
95.199997 7.540001 95.159996 5.320001 95.099998 5.220001 c
95 5.040001 94.739998 5.000001 94.540001 4.980001 c
94.099998 4.900001 93.879997 5.02 93.220001 5.02 c
92.560005 5.02 92.520004 5.22 92.520004 5.920001 c
92.520004 6.52 l
92.500008 7.000001 92.580002 10.360001 92.580002 10.900001 c
92.580002 11.160001 92.560005 11.18 92.300003 11.18 c
91.639999 11.16 90.720001 11.240001 90.040001 11.18 c
89.059998 11.1 89.279999 11.18 89.220001 10.280001 c
89.220001 10.160001 l
89.220001 8.880001 89.380005 5.560001 89.32 5.360001 c
89.220001 5.06 89.099998 5.000001 88.839996 5.02 c
88.239998 5.06 87.619995 4.960001 87.019997 5.000001 c
86.82 5.02 86.759995 5.08 86.699997 5.280001 c
86.68 5.380001 86.659996 5.480001 86.659996 5.580001 c
86.659996 6.200001 86.699997 7.040001 86.719994 7.660001 c
86.659996 19.52 l
86.659996 20.040001 87.119995 19.98 88.139999 19.98 c
89.080002 19.98 89.32 20.199999 89.32 19.08 c
89.32 18.18 89.260002 17.040001 89.279999 16.139999 c
89.299995 15.44 89.279999 14.759999 89.279999 14.06 c
89.299995 13.799999 89.360001 13.719999 89.599998 13.719999 c
90.479996 13.699999 91.439995 13.719999 92.32 13.719999 c
92.599998 13.719999 92.659996 13.759999 92.659996 14.079999 c
92.660004 14.08 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
